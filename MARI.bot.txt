import telebot
import random

API_TOKEN = '7006670999:AAEC3A7XPzgFKA485XwQkq1sjplWlGrIea0'

bot = telebot.TeleBot(API_TOKEN)

# –ü–∞–º—è—Ç—å (—Ñ–∞–∫—Ç—ã)
faq = {
    "—á—Ç–æ —Ç–∞–∫–æ–µ —Å–∏–Ω—É—Å": "–°–∏–Ω—É—Å ‚Äî —ç—Ç–æ —Ç–∞–∫–∞—è —à—Ç—É—á–∫–∞ –≤ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏, —Å–µ–Ω–ø–∞–π~! –û–Ω —Ä–∞–≤–µ–Ω –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫–∞—Ç–µ—Ç–∞ –∫ –≥–∏–ø–æ—Ç–µ–Ω—É–∑–µ! üìê",
    "–∫—Ç–æ —Ç–∞–∫–æ–π –Ω—å—é—Ç–æ–Ω": "–ê-–∞-–∞! –≠—Ç–æ —Ç–æ—Ç –≥–µ–Ω–∏–π —Å —è–±–ª–æ–∫–æ–º üçé! –û–Ω –ø—Ä–∏–¥—É–º–∞–ª –∑–∞–∫–æ–Ω—ã –¥–≤–∏–∂–µ–Ω–∏—è~",
    "—á—Ç–æ —Ç–∞–∫–æ–µ –¥–Ω–∫": "–î–ù–ö ‚Äî —ç—Ç–æ –∫–∞–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥–∏–∫ –≤—Å–µ—Ö –∂–∏–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤. –ë–∏–æ–ª–æ–≥–∏—è –Ω—è~ üß¨",
    "–∫—Ç–æ —Ç–∞–∫–æ–π –≥–∞–≤—Ä–∏–ª–∞ –¥–µ—Ä–∂–∞–≤–∏–Ω": "–û, –ø–æ—ç—Ç! –û–Ω –ø–∏—Å–∞–ª –∫—Ä–∞—Å–∏–≤—ã–µ —Å—Ç–∏—Ö–∏, –ø—Ä—è–º –¥—É—à–µ–≤–Ω—ã–µ, —Ö–∏-—Ö–∏~ üìú",
    "—á—Ç–æ —Ç–∞–∫–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏": "–≠—Ç–æ —Ç–∞–∫–∞—è –∫–æ—Ä–æ–±–æ—á–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏! –¢—ã –º–æ–∂–µ—à—å –º–µ–Ω—è—Ç—å –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∫–∞–∫ —Ö–æ—á–µ—à—å üíª"
}

# –í–∞—Ä–∏–∞–Ω—Ç—ã —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏
def get_suffixed_name(name):
    suffixes = ['-—Å–∞–Ω', '-–∫—É–Ω', '-—á–∞–Ω']
    return name + random.choice(suffixes)

# /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    username = message.from_user.first_name or "–°–µ–Ω–ø–∞–π"
    name_with_suffix = get_suffixed_name(username)
    bot.reply_to(message, f"Konnichiwa, {name_with_suffix}! üå∏\n–Ø MARI, —Ç–≤–æ—è —Ü–∏—Ñ—Ä–æ–≤–∞—è –Ω—è—à–∞-–ø–æ–º–æ—â–Ω–∏—Ü–∞!\n–°–ø—Ä–æ—Å–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–ª–∏ –Ω–∞—É—á–∏ –º–µ–Ω—è~!")

# /–Ω–∞—É—á–∏
@bot.message_handler(commands=['–Ω–∞—É—á–∏'])
def teach_mari(message):
    try:
        content = message.text[7:].strip()
        if '=' not in content:
            bot.reply_to(message, "Gomen nasai, —Å–µ–Ω–ø–∞–π~! üò¢ –§–æ—Ä–º–∞—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!\n–ù–∞–ø–∏—à–∏ –≤–æ—Ç —Ç–∞–∫: /–Ω–∞—É—á–∏ –≤–æ–ø—Ä–æ—Å = –æ—Ç–≤–µ—Ç")
            return

        question, answer = content.split('=', 1)
        question = question.strip().lower()
        answer = answer.strip()

        if question and answer:
            faq[question] = answer
            bot.reply_to(message, f"Arigatou, —Å–µ–Ω–ø–∞–π~! –Ø –∑–∞–ø–æ–º–Ω–∏–ª–∞: '{question}' üíæ Ureshii~! üíñ")
        else:
            bot.reply_to(message, "Gomen... –Ø –Ω–µ —Å–º–æ–≥–ª–∞ –ø–æ–Ω—è—Ç—å üòñ")

    except Exception as e:
        bot.reply_to(message, f"Gomen nasai... –æ—à–∏–±–∫–∞: {e} üíî")

# –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: True)
def respond(message):
    user_text = message.text.lower()

    for key in faq:
        if key in user_text:
            bot.reply_to(message, faq[key] + " ~ Hai! ‚ú®")
            return

    # –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç –æ—Ç–≤–µ—Ç
    unknown_responses = [
        "Gomen nasai, —Å–µ–Ω–ø–∞–π... Wakarimasen... üòñ –ù–æ —è —É—á—É—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! Ganbarimasu~! üå±",
        "–≠—ç—ç... –Ø –Ω–µ –∑–Ω–∞—é –ø–æ–∫–∞, —Å–µ–Ω–ø–∞–π~ ü•∫ –ù–æ —Å–∫–æ—Ä–æ —É–∑–Ω–∞—é!",
        "Wakarimasen... –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –º–µ–Ω—è –Ω–∞—É—á–∏—Ç—å! üí° /–Ω–∞—É—á–∏ –≤–æ–ø—Ä–æ—Å = –æ—Ç–≤–µ—Ç",
        "–£–ø—Å! –û—à–∏–±–∫–∞ –≤ –≥–æ–ª–æ–≤–µ üòµ‚Äçüí´ –•–æ—á–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –æ–± —ç—Ç–æ–º?",
        "Gomen~ –Ø –º–∞–ª–µ–Ω—å–∫–∏–π –ò–ò, –Ω–æ —Ä–∞—Å—Ç—É üìà Arigatou –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ~"
    ]

    bot.reply_to(message, random.choice(unknown_responses))

bot.polling()

